networks: 
  dev:
    driver: bridge

volumes:
  gallery_storage:

services:
  backend:
    build:
      context: ./backend
    restart: unless-stopped
    environment:
      FRONTEND_HOST: ${FRONTEND_HOST}
      FRONTEND_PORT: ${FRONTEND_PORT}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      MEDIA_FOLDER: ${MEDIA_FOLDER}
      DB_NAME: ${DB_NAME}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - gallery_storage:/${BACKEND_HOST}/${MEDIA_FOLDER}
    networks:
      - dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${BACKEND_HOST}:${BACKEND_PORT}/health/"]
      interval: 1h
      timeout: 5s
      retries: 1
      start_period: 10s

  frontend:
    build:
      context: ./frontend
    restart: unless-stopped
    environment:
      FRONTEND_HOST: ${FRONTEND_HOST}
      FRONTEND_PORT: ${FRONTEND_PORT}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      MEDIA_FOLDER: ${MEDIA_FOLDER}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - gallery_storage:/${FRONTEND_HOST}/${MEDIA_FOLDER}
    networks:
      - dev
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${FRONTEND_HOST}:${FRONTEND_PORT}/"]
      interval: 1h
      timeout: 5s
      retries: 1
      start_period: 10s

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    environment:
      - MEDIA_FOLDER=${MEDIA_FOLDER}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt
      - gallery_storage:/${MEDIA_FOLDER}
    networks:
      - dev
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
